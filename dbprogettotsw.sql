DROP DATABASE IF EXISTS dbprogettotsw;
CREATE DATABASE IF NOT EXISTS dbprogettotsw;
USE dbprogettotsw;

/*Rappresento prima le entita' indipendenti*/
CREATE TABLE IF NOT EXISTS Indirizzo(
ID VARCHAR(10),
Via VARCHAR(50) NOT NULL,
Cap VARCHAR(5) NOT NULL,
Citta VARCHAR(50) NOT NULL,
PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS Utente(
ID VARCHAR(10),
Nome VARCHAR(50) NOT NULL,
Cognome VARCHAR(50) NOT NULL,
CF VARCHAR(16) NOT NULL,
Email VARCHAR(50) NOT NULL,
Cellulare VARCHAR(15) NOT NULL,
Tipologia VARCHAR(50) NOT NULL,
NumeroOrdini INT NOT NULL,
Password VARCHAR(100) NOT NULL,
PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS Produttore(
PartitaIva VARCHAR(11),
Nome VARCHAR(50) NOT NULL,
PRIMARY KEY(PartitaIva)
);

CREATE TABLE IF NOT EXISTS Categoria(
Codice VARCHAR(10),
Nome VARCHAR(50) NOT NULL,
PRIMARY KEY(Codice)
);

CREATE TABLE IF NOT EXISTS MetodoDiPagamento(
Codice VARCHAR(10),
Tipo VARCHAR(50) NOT NULL,
NominativoIntestatario VARCHAR(50) NOT NULL,
PRIMARY KEY(Codice)
);


/*Rappresento ora le entita' dipendenti*/
CREATE TABLE IF NOT EXISTS Prodotto (
Codice VARCHAR(10),
Nome VARCHAR(100) NOT NULL,
Descrizione VARCHAR(1000) NOT NULL,
Prezzo DOUBLE NOT NULL,
Peso DOUBLE NOT NULL,
CodiceCategoria VARCHAR(10),
Image VARCHAR(40) NOT NULL,
Quantita DOUBLE NOT NULL,
FOREIGN KEY (CodiceCategoria) REFERENCES Categoria(Codice)
								 ON DELETE CASCADE 
								 ON UPDATE CASCADE,
PRIMARY KEY(Codice)
) ;

CREATE TABLE IF NOT EXISTS Domiciliato(
IDIndirizzo VARCHAR(10),
IDUtente VARCHAR(10),
FOREIGN KEY(IDIndirizzo) REFERENCES Indirizzo(ID)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
FOREIGN KEY(IDUtente) REFERENCES Utente(ID)
								ON DELETE CASCADE 
								ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Wishlist(
IDUtente VARCHAR(10),
CodiceProdotto VARCHAR(10),
DataAggiunta DATETIME NOT NULL,
FOREIGN KEY(IDUtente) REFERENCES Utente(ID)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
FOREIGN KEY(CodiceProdotto) REFERENCES Prodotto(Codice)
								ON DELETE CASCADE 
								ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Acquisto(
IDUtente VARCHAR(10),
CodiceProdotto VARCHAR(10),
CodFattura VARCHAR(10) NOT NULL,
FOREIGN KEY(IDUtente) REFERENCES Utente(ID)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
FOREIGN KEY(CodiceProdotto) REFERENCES Prodotto(Codice)
								ON DELETE CASCADE 
								ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS Creazione(
CodiceProdotto VARCHAR(10),
PartitaIvaProduttore VARCHAR(11),
FOREIGN KEY(CodiceProdotto) REFERENCES Prodotto(Codice)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
FOREIGN KEY(PartitaIvaProduttore) REFERENCES Produttore(PartitaIva)
								ON DELETE CASCADE 
								ON UPDATE CASCADE							
);

CREATE TABLE IF NOT EXISTS Ordine(
NumeroOrdine INTEGER,
Stato VARCHAR(50) NOT NULL,
DataOrdine DATETIME NOT NULL,
IDUtente VARCHAR(10),
IDIndirizzo VARCHAR(10),
IDSpecificaOrdine VARCHAR(10),
FOREIGN KEY(IDUtente) REFERENCES Utente(ID)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
FOREIGN KEY(IDIndirizzo) REFERENCES Indirizzo(ID)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
PRIMARY KEY(NumeroOrdine)
);

CREATE TABLE IF NOT EXISTS SpecificaOrdine(
ID VARCHAR(10),
NumeroOrdine INTEGER,
PesoTotale DOUBLE NOT NULL,
CostoTotale DOUBLE NOT NULL,
FOREIGN KEY(NumeroOrdine) REFERENCES Ordine(NumeroOrdine)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS Riferimento(
CodiceProdotto VARCHAR(10),
IDSpecificaOrdine VARCHAR(10),
FOREIGN KEY(CodiceProdotto) REFERENCES Prodotto(Codice)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
FOREIGN KEY(IDSpecificaOrdine) REFERENCES SpecificaOrdine(ID)
								ON DELETE CASCADE 
								ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS Saldo(
CodiceMetodoDiPagamento VARCHAR(10),
NumeroOrdine INTEGER,
FOREIGN KEY(CodiceMetodoDiPagamento) REFERENCES MetodoDiPagamento(Codice)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
FOREIGN KEY(NumeroOrdine) REFERENCES Ordine(NumeroOrdine)
								ON DELETE CASCADE 
								ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS Utilizzo(
CodiceMetodoDiPagamento VARCHAR(10),
IDUtente  VARCHAR(10),
FOREIGN KEY(CodiceMetodoDiPagamento) REFERENCES MetodoDiPagamento(Codice)
								ON DELETE CASCADE 
								ON UPDATE CASCADE,
FOREIGN KEY(IDUtente) REFERENCES Utente(ID)
								ON DELETE CASCADE 
								ON UPDATE CASCADE
);
